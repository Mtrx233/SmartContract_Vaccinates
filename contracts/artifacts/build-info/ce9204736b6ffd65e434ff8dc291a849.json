{
	"id": "ce9204736b6ffd65e434ff8dc291a849",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/vaccineFactory.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract vaccine {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/vaccineFactory.sol": {
				"vaccine": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/vaccineFactory.sol\":35:62  contract vaccine {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/vaccineFactory.sol\":35:62  contract vaccine {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209a32907f136c1670254ac04dd81b8732d80434a6653c564d0dde8926641de66c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212209a32907f136c1670254ac04dd81b8732d80434a6653c564d0dde8926641de66c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 ORIGIN SWAP1 PUSH32 0x136C1670254AC04DD81B8732D80434A6653C564D0DDE8926641DE66C64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "35:27:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212209a32907f136c1670254ac04dd81b8732d80434a6653c564d0dde8926641de66c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 ORIGIN SWAP1 PUSH32 0x136C1670254AC04DD81B8732D80434A6653C564D0DDE8926641DE66C64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "35:27:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 62,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a32907f136c1670254ac04dd81b8732d80434a6653c564d0dde8926641de66c64736f6c634300080d0033",
									".code": [
										{
											"begin": 35,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 62,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 62,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 62,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaccineFactory.sol\":\"vaccine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/vaccineFactory.sol\":{\"keccak256\":\"0x394cbdc5d1d41b7e1f73af49ea58d604e19abc05d217472fbd5f021b86179178\",\"urls\":[\"bzz-raw://fa0216f5b9b82789602f038c6eba030ba27129b16e1047d4231da24bb2b95393\",\"dweb:/ipfs/QmZG73QSG9d7wK3r4hg6MufaTpo6TdoUHsQfjyj6MsNAFa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/vaccineFactory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/vaccineFactory.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/vaccineFactory.sol": {
				"ast": {
					"absolutePath": "contracts/vaccineFactory.sol",
					"exportedSymbols": {
						"vaccine": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "vaccine",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "vaccine",
							"nameLocation": "44:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:27:0",
							"usedErrors": []
						}
					],
					"src": "0:62:0"
				},
				"id": 0
			}
		}
	}
}